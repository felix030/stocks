plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.openapi.generator' version "5.3.0"
}

group = 'com.felixklemke'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.swagger.parser.v3:swagger-parser:2.0.7'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.5.7'
    implementation('org.springframework.boot:spring-boot-starter-validation')
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    def junitJupiterVersion = '5.4.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.testcontainers:testcontainers:1.16.2"
    testImplementation "org.testcontainers:junit-jupiter:1.16.2"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// generates the spring controller interfaces from openapi spec in src/main/resources/service.yaml
openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/specs/stocks-v0.1.yaml"
    outputDir = "${buildDir}/generated/"
    apiPackage = "com.felixklemke.stocks.api"
    invokerPackage = "com.felixklemke.stocks.invoker"
    modelPackage = "com.felixklemke.stocks.model"
    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: "true",
    ]
}

// forces generation of spring controllers on compile, adding them to the sources for compilation
compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"


test {
    useJUnitPlatform()
}